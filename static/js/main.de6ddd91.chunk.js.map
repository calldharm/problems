{"version":3,"sources":["utility/constanst.js","components/header/Header.js","components/footer/Footer.js","utility/utils.js","components/Loading.js","components/Profile.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["LIST_CONSTANTS","GIT_API_GET_USERS","GIT_REPOS","MSG_OOPS","MSG_NOTFOUND","MSG_TOOLTIP_URL","MSG_VIEWREPOOF","Header","props","_jsx","className","children","Row","_jsxs","Col","style","fontSize","padding","margin","title","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","_objectSpread","id","Button","width","height","marginBottom","cursor","variant","subtitle","note","getAPIHeader","method","headers","Authorization","process","API_TOKEN","Loading","Profile","_useState","useState","_useState2","_slicedToArray","avatarURL","setAvatarURL","_useState3","_useState4","githubUsername","setGitHubUsername","_useState5","_useState6","repoData","setRepoData","params","useParams","userInput","useContext","AppContext","_repoDataURL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","apiURL","apiHeader","wrap","_context","prev","next","abrupt","concat","fetch","then","res","json","result","console","log","profileContent","message","Array","isArray","map","item","ListGroup","Item","target","href","svn_url","name","_readOnlyError","error","stop","apply","arguments","useEffect","avatar_url","login","repoDataURL","_Fragment","lg","whiteSpace","overflow","_jsxs2","Card","_defineProperty","Body","Img","src","alignSelf","marginRight","private","Text","language","maxHeight","minHeight","overflowY","description","open_issues","clone_url","stargazers_count","forks_count","watchers","Search","useNavigate","_useContext","setUserInput","_LogUser","onSubmit","hidden","value","onChange","e","type","placeholder","createContext","App","Provider","Router","Routes","Route","path","element","Footer","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.de6ddd91.chunk.js","sourcesContent":["// import React from 'react';\n\n\nexport const LIST_CONSTANTS = {\n    GIT_API_GET_USERS: 'https://api.github.com/users/',\n    GIT_REPOS: '/repos',\n    MSG_OOPS: 'Opps',\n    MSG_NOTFOUND: 'Not Found',\n    MSG_TOOLTIP_URL: 'Enter UserID in URL like : http://localhost:3000/pdf',\n    MSG_VIEWREPOOF: 'Viewing repositories of'\n};","import React from \"react\";\nimport \"./Header.css\";\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { LIST_CONSTANTS } from \"../../utility/constanst\"\n\n// header for the app\nexport default function Header(props) {\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      {LIST_CONSTANTS.MSG_TOOLTIP_URL}\n    </Tooltip>\n  );\n  return (\n    <div className=\"header\">\n     <Row>\n       <Col>\n          <span style={{ fontSize: '1.5rem', padding: '10px', margin:'1px'}}>{props.title}</span>\n          <OverlayTrigger\n          placement=\"right\"\n          delay={{ show: 250, hide: 400 }}\n          overlay={renderTooltip}\n          >\n             <Button style={{ width: '1rem' , height: '1rem', fontSize: '0.6rem', padding: '1px', marginBottom:'9px', cursor: \"pointer\"}} variant=\"warning\">i</Button>\n          </OverlayTrigger>\n          <p>{props.subtitle}</p>\n       </Col>\n      </Row>\n    </div>\n  );\n}","import React from \"react\";\nimport \"./Footer.css\";\n// Footer for the app\nexport default function Header(props) {\n  return (\n    <div className=\"footer\">\n      {props.note}\n    </div>\n  );\n}\n","// import Tooltip from 'react-bootstrap/Tooltip';\n// import { LIST_CONSTANTS } from \"./constanst\"\n\n// Function to get API headers\nexport const getAPIHeader = () => {\n  // require('dotenv').config();\n  const API_TOKEN  = process.env.API_TOKEN;\n    const header = {\n        method: \"GET\",\n        // Get GIT API token from ENV\n        headers: {\n          Authorization: API_TOKEN \n        }\n      };\n    return header;\n  };\n  \n  // TODO: Make tooltip renderer a common util function\n  // Fuction to get tooltip\n  // export const renderTooltip = (props) => (\n  //   <Tooltip id=\"button-tooltip\" {...props}>\n  //     {LIST_CONSTANTS.MSG_TOOLTIP_URL}\n  //   </Tooltip>\n  // );","import React from \"react\"\n\nexport default function Loading() {\n  return <div className=\"font-bold text-3xl\">Loading...</div>\n}","import { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport React from 'react';\nimport { useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport { useParams } from \"react-router-dom\";\nimport { getAPIHeader } from \"../utility/utils\"\nimport { LIST_CONSTANTS } from \"../utility/constanst\"\nimport Loading from \"./Loading\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nexport const Profile = () => {\n    // User Profile  : Using Bootstrap elements for main profile page\n\n   const [avatarURL, setAvatarURL] = useState();\n   const [githubUsername, setGitHubUsername] = useState();\n\n   const [repoData, setRepoData] = useState();\n   // Get ID from URL\n   const params = useParams();\n   let {userInput}=useContext(AppContext);\n\n   // Async function to call Github api and get repo data\n   async function repoDataURL() {\n    let user = '';\n    // don't do anything if params of url ID is not valid\n    if (!params || !params.id) return;\n\n    if (params.id || userInput) {\n      user = params.id || userInput\n    } \n    \n    // Get API url nd header from constant\n    const apiURL = `${LIST_CONSTANTS.GIT_API_GET_USERS}${user}${LIST_CONSTANTS.GIT_REPOS}`;\n    const apiHeader = getAPIHeader;\n\n    await fetch(apiURL,apiHeader)\n      .then((res) => res.json()) // converting  response in json\n      .then(\n        (result) => {\n          console.log(36, result);\n          let profileContent = \"\";\n          profileContent = (result[0] && result[0].message && result[0].message === LIST_CONSTANTS.MSG_NOTFOUND) ? LIST_CONSTANTS.MSG_OOPS : \"\";\n          \n          const list = (result && Array.isArray(result)) ? result.map((item) => (\n          \n            <ListGroup.Item>\n              <a target=\"_blank\" href={item.svn_url}>\n                {item.name}\n              </a>\n            </ListGroup.Item>\n\n          )) : [];\n\n          if(profileContent) {\n            list = [\"opps\"];\n          } else {\n            // setRepoData(list);\n            setRepoData(result);\n          }\n          \n        },\n        // In case of any error in API log here\n        (error) => {\n          console.log(error);\n          <div className=\"text-center\">\n            Opps.. something went wrong, please check user ID or try again later.\n          </div>\n        }\n      );\n  }\n\n\n  /* \n    Get URL user name details froim Git api\n    useEffect hook is used to perform a side effect logic for a component.\n    It is done after component renders.It lets a component interact outside \n    without affecting the rendering or performance of the component.\n  */\n  useEffect(() => {\n    console.log(params.id);\n    if(!userInput) {\n      userInput = params.id;\n    }\n\n    // Get API url and header from constant\n    const apiURL = `${LIST_CONSTANTS.GIT_API_GET_USERS}${userInput}`;\n    const apiHeader = getAPIHeader;\n\n    fetch(apiURL, apiHeader())\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        console.log(result);\n        setAvatarURL(result.avatar_url);\n        setGitHubUsername(result.login);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }, []);\n\n  // Get list of repos for given user\n  useEffect(() => {\n    repoDataURL();\n  }, []);\n\n  return (\n    <>\n      <div className=\"pt-10\" >\n        <h3 className=\"mb-10 font-bold text-2xl\">\n          {LIST_CONSTANTS.MSG_VIEWREPOOF} <b>{githubUsername}</b>\n        </h3>\n      </div>\n\n      {!repoData ? (\n        <Loading />\n      ) : (\n        // reating cards for each item\n        <Row lg={4} style={{ padding: '0.5rem', whiteSpace: 'normal', overflow: 'auto'}}>\n          {repoData.map((item) => (\n          \n          <Col className=\"d-flex\" style={{ padding: '0.5rem'}}>\n            <Card style={{ width: '17rem' , height: '18rem'}} className=\"flex-fill\" key={item} className=\"productlist\">\n              <Card.Body style={{ padding: '0.1rem' , margin: '0.4rem'}}>\n               <Card.Img variant=\"top\" src={avatarURL} style={{ width: '3rem', height: '3rem', alignSelf:'left', marginRight: '1.2rem' }} />\n               <Button href={item.svn_url} target=\"_blank\"  style={{ width: '10rem' , height: '1.8rem', fontSize: '1rem', padding: '1px', margin:'1px', cursor: \"pointer\"}} variant=\"primary\">{item.name}</Button>\n               <Button style={{ width: '3rem' , height: '1.1rem', fontSize: '0.6rem', padding: '1px', margin:'1px'}} variant=\"secondary\">{(item.private)? 'Private' : 'Public'}</Button>\n               <Card.Text style={{ fontSize: '0.6rem' }}> {item.language} </Card.Text>\n               <Card.Text style={{ fontSize: '0.7rem', height:'2.7rem', maxHeight: '2.7rem', minHeight: '2.7rem', overflowY:'auto' }}>{item.description}</Card.Text>\n              </Card.Body>\n  \n              <ListGroup style={{ fontSize: '0.7rem', padding: '0.1rem' , margin: '0.1rem' }} className=\"list-group-flush\">\n                <ListGroup.Item>Owner : {githubUsername}</ListGroup.Item>\n                <ListGroup.Item>Issues :{item.open_issues}</ListGroup.Item>\n                {/* <ListGroup.Item>{ (item.license.name) ? 'Licence :' + item.license.name : 'Size : ' + item.size} </ListGroup.Item> */}\n              </ListGroup>\n\n              <Card.Body>\n                <Button href={item.clone_url} style={{ width: '3rem' , height: '1.1rem', fontSize: '0.6rem', padding: '1px', margin:'3px', cursor: \"pointer\"}} variant=\"success\">clone</Button>\n                <Button style={{ width: '3rem' , height: '1.1rem', fontSize: '0.6rem', padding: '1px', margin:'3px'}} variant=\"warning\"><b>{item.stargazers_count}</b> starts</Button>\n                <Button style={{ width: '3rem' , height: '1.1rem', fontSize: '0.6rem', padding: '1px', margin:'3px'}} variant=\"light\">{item.forks_count} forks</Button>\n                <Button style={{ width: '4rem' , height: '1.1rem', fontSize: '0.6rem', padding: '1px', margin:'3px'}} variant=\"light\">{item.watchers} watchers</Button>\n              </Card.Body>\n\n            </Card>\n          </ Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n  \n\n}","import { useContext, Fragment } from \"react\"\nimport { AppContext } from \"../App\"\nimport { Profile } from './Profile';\nimport \"../App.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\n\nexport const Search = () => {\n    /* Search component: \n       For users to enter their user name.\n       When search button is clicked, user is taken to the profile page,\n       using useNavigate from react router dom\n    */\n\n    const navigate = useNavigate();\n    const {userInput,setUserInput} = useContext(AppContext);\n    // Get ID from URL\n    const params = useParams();\n    \n    // Function to navigate user to there profile page\n    async function LogUser (){\n        // debugger;\n        // Get ID from URL\n        // const params = useParams();\n        // navigate('/Profile');\n        // navigate(`/${userInput}`);\n    };\n\n    return (\n    <div className=\"Search w-100 min-vh-50 justify-content-center align-items-center d-flex flex-column\">\n       {/* TODO: Hiding search fields, since there is some issue, will work later */}\n       <form onSubmit={LogUser} hidden>\n\n        <br></br> \n\n        {/* Testbox to enter user name */}\n        <input \n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            type=\"text\" \n            placeholder=\"Enter User Name...\"\n        />\n         \n        <br></br>\n         \n        <input type=\"submit\" value=\"Search\"/>\n\n      </form>\n    \n       <>\n         {/* <Alert variant=\"success\">\n            Enter User name in URL like this: http://localhost:3000/pdf\n         </Alert> */}\n\n          {/* <OverlayTrigger\n            placement=\"right\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={renderTooltip}\n           >\n            <Button style={{ width: '3rem' , height: '1.1rem', fontSize: '0.6rem', padding: '1px', margin:'5px', cursor: \"pointer\"}} variant=\"warning\">info</Button>\n           </OverlayTrigger> */}\n\n         {/* Loading Profile as well */}\n         <Profile user={userInput} />\n        </>\n    \n    </div>\n    );\n}","import './App.css';\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport { Search } from './components/Search';\nimport { Profile } from './components/Profile';\nimport React from 'react';\nimport {BrowserRouter as Router, Routes,Route } from 'react-router-dom';\nimport {useState, createContext } from \"react\";\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [userInput,setUserInput] = useState(\"\");\n  return (\n    <div>\n      <Header title=\"Git Lists\" subtitle=\"\" />\n      {/* useContext hook is used here to pass the userInput and setUserInput through the pages. */}\n       <AppContext.Provider value={{userInput,setUserInput}}>\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Search />} />\n                <Route path=\"/:id\" element={<Search />} />\n                <Route path=\"/profile\" element={<Profile />} />\n                <Route path=\"/profile/:id\" element={<Profile />} />\n            </Routes>\n        </Router>\n      </AppContext.Provider>\n      <Footer note=\"Simple App to list user repos by Dharm\" />\n    </div>\n\n\n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    */\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}